// This file will be processed by the MIDL tool to
// produce the type library (Temp2.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(4EB7D29B-2455-4B1F-84F5-0EFE5C5FEC07),
	dual,
	oleautomation,
	pointer_default(unique)
] 

interface INWCVariantDictionary : IDispatch 
{	[propget,id(0)] HRESULT  Item([in] VARIANT varKey, [out,retval] VARIANT *pVal);
	[propput,id(0)] HRESULT  Item([in] VARIANT varKey, [in] VARIANT newVal);
	[propputref,id(0),defaultcollelem] HRESULT  Item([in] VARIANT varKey, [in] VARIANT newVal);
	[propget] HRESULT  Key([in] VARIANT KeyIndex, [out,retval] VARIANT *pVal);
	[propget] HRESULT  Count([out,retval] int *pVal);
	[id(-4),restricted] HRESULT  _NewEnum([out,retval] IUnknown **pVal);
	HRESULT  Remove([in] VARIANT varKey);
	HRESULT  RemoveAll();
	[propget] HRESULT  Exists([in] VARIANT vKey, [out,retval] VARIANT_BOOL *pVal);
	[propget] HRESULT  VarType([in] VARIANT vKey, [out,retval] SHORT *pVal);
	[propget, hidden, restricted] HRESULT  CaseSensitive([out,retval] VARIANT_BOOL *pVal);
	[propput, hidden, restricted] HRESULT  CaseSensitive([in] VARIANT_BOOL newVal);
	HRESULT Persist(VARIANT varKey);
};


[odl,uuid(4A7DEB90-B069-11D0-B373-00A0C90C2BD8), hidden,oleautomation]
interface IVariantDictionary2 : IUnknown
{
	[restricted] HRESULT GetTypeInfoCount2(UINT *pctinfo);//idispatch stubs
	[restricted] HRESULT GetTypeInfo2(UINT iTInfo, LCID lcid, ITypeInfo **ppTInfo);
	[restricted] HRESULT GetIDsOfNames2( REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId);
	[restricted] HRESULT Invoke2(DISPID dispIdMember, REFIID riid, LCID lcid, WORD wFlags, DISPPARAMS *pDispParams, VARIANT *pVarResult, EXCEPINFO *pExcepInfo, UINT *puArgErr);

    [propget] HRESULT Item2([in] VARIANT VarKey, [out, retval] VARIANT* pvar);
    [propput] HRESULT Item2([in] VARIANT VarKey, [in] VARIANT pvar);
	[propputref]HRESULT Item2([in] VARIANT VarKey, [in] VARIANT pvar);
    [propget] HRESULT Key2([in] VARIANT VarKey, [out, retval] VARIANT* pvar);
    [propget] HRESULT Count2([out, retval] int* cStrRet);
    [propget, restricted] HRESULT _NewEnum2([out, retval] IUnknown** ppEnumReturn);
    HRESULT Remove2([in] VARIANT VarKey);
    HRESULT RemoveAll2();
};

//original MS definition
[odl, uuid(D97A6DA0-A865-11CF-83AF-00A0C90C2BD8),hidden,oleautomation]
	interface ISessionObject2 : IUnknown // cannot use IDispatch
	{
	[restricted] HRESULT GetTypeInfoCount2(UINT *pctinfo);//idispatch stubs
	[restricted] HRESULT GetTypeInfo2(UINT iTInfo, LCID lcid, UINT **ppTInfo);
	[restricted] HRESULT GetIDsOfNames2( UINT* riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId);
	[restricted] HRESULT Invoke2(DISPID dispIdMember,UINT* riid,LCID lcid,WORD wFlags,UINT *pDispParams,VARIANT *pVarResult,UINT *pExcepInfo,UINT *puArgErr);

    [propget] HRESULT Value2(
                    [in] BSTR bstrValue, 
                    [out, retval] VARIANT* pvar);
    [propput] HRESULT Value2(
                    [in] BSTR bstrValue, 
                    [in] VARIANT pvar);
    [propputref] HRESULT Value2(
                    [in] BSTR bstrValue, 
                    [in] VARIANT pvar);
    [propget] HRESULT Timeout2([out, retval] LONG* plvar);
    [propput] HRESULT Timeout2([in] LONG plvar);
    HRESULT Abandon2();
    [propget] HRESULT CodePage2([out, retval] LONG* plvar);
    [propput] HRESULT CodePage2([in] LONG plvar);
    [propget] HRESULT LCID2([out, retval] LONG* plvar);
    [propput] HRESULT LCID2([in] LONG plvar);
    [propget] HRESULT StaticObjects2([out, retval] IVariantDictionary2** ppTaggedObjects);
    [propget] HRESULT Contents2([out, retval] IVariantDictionary2** ppProperties);
};

	//our extended ISession definition
[
	object,
	uuid(A84D5FFF-6EB4-4211-82E6-045C74F3CB6B),
	dual,
	oleautomation,
	pointer_default(unique)

] 
interface INWCSession : IDispatch 
{	
	//called internally by IIS when used with Server.CreateObject
	HRESULT OnStartPage([in] IUnknown* p);
	HRESULT OnEndPage();
	// end IIS

	[propget] HRESULT  SessionID([out,retval] BSTR *pbstrRet);
	[propget,id(0)] HRESULT  Value([in] BSTR vkey, [out,retval] VARIANT *pVal);
	[propput,id(0)] HRESULT  Value([in] BSTR vkey, [in] VARIANT newVal);
	[propputref,id(0)] HRESULT  Value([in] BSTR vkey, [in] VARIANT newVal);
	[propget] HRESULT  TimeOut([out,retval] LONG *pVal);
	[propput] HRESULT  TimeOut([in] LONG pVal);
	HRESULT  Abandon();
	[propget, hidden] HRESULT  CodePage([out, retval] LONG *pVal);
	[propput, hidden] HRESULT  CodePage([in] LONG newVal);
	[propget, hidden] HRESULT  LCID([out, retval] LONG *pVal);
	[propput, hidden] HRESULT  LCID([in] LONG newVal);
	[propget,hidden] HRESULT  StaticObjects([out,retval] INWCVariantDictionary **ppProperties);
	[propget] HRESULT  Contents([out,retval] INWCVariantDictionary **pVal);

	[propget] HRESULT  IsExpired([out,retval] VARIANT_BOOL *pVal);
	[propget] HRESULT  IsNew([out,retval] VARIANT_BOOL *pVal);
	[propget] HRESULT  LiquidCookie([out,retval] VARIANT_BOOL *pVal);
	[propput] HRESULT  LiquidCookie([in] VARIANT_BOOL newVal);
	[propget] HRESULT  ReEntrance([out,retval] VARIANT_BOOL *pVal);
	[propput] HRESULT  ReEntrance([in] VARIANT_BOOL newVal);
	[propget] HRESULT  URL([in] VARIANT strCheckA, [out,retval] VARIANT *pVal);

	HRESULT  Execute([in] BSTR ToPage);
	HRESULT  Transfer([in] BSTR ToPage);
	[propget] HRESULT  CreateInstance([in] BSTR progid, [out,retval] IDispatch **pVal);
	[propput] HRESULT  Readonly([in] VARIANT_BOOL newVal);
	
	
	HRESULT Statistics([in, optional] VARIANT vAppKey, [in,optional] VARIANT vSessionID, [out, retval] INWCVariantDictionary** retVal);	
	HRESULT EnsureURLCookie();	
	[propget] 
	HRESULT OldSessionID ([out, retval] BSTR *pVal);	



};

[
	object,
	uuid(D97A6DA0-A866-11cf-83AE-10A0C90C2BD9),
	dual,
	oleautomation,
	pointer_default(unique)

]
interface INWCApplicationObject : IDispatch
{
	[propget, id(0)] HRESULT Value([in] BSTR bstrValue, [out, retval] VARIANT* pvar);
	[propput, id(0)] HRESULT Value([in] BSTR bstrValue, [in] VARIANT var);
	[propputref, id(0)] HRESULT Value([in] BSTR bstrValue, [in] VARIANT var);
	[helpstring("Locks the application object for unique access. Carefull, this potentially locks down your website")] HRESULT Lock();
	HRESULT UnLock();
	[propget] HRESULT StaticObjects([out, retval] INWCVariantDictionary **ppProperties);
	[propget] HRESULT Contents([out, retval] INWCVariantDictionary **ppProperties);
};

[ version(1.0), uuid(A51465F8-E60A-4645-8DFE-F0F1DE91DC80), helpstring("CSession 1.0 Type Library") ]
library ISPCSession
{
	importlib("stdole2.tlb");

	[
		noncreatable,
		aggregatable,
		version(1.0),
		uuid(94764678-7F98-4CD8-88E9-FA83D776135C),
		helpstring("dictionary which stores key/value pairs.")
	] 

	coclass CVariantDictionary 
	{
		interface INWCVariantDictionary;
	};
	

	[
		aggregatable,
		version(1.0),
		uuid(D64ABC73-3B0E-4E85-92CD-215B03CAC996),		
		helpstring("Classic ASP Session replacement")
	] 

	coclass NWCSession 
	{
		interface INWCSession;
	};

	[
		aggregatable,
		version(1.0),
		uuid(D64ABC73-3B0E-4E85-92CD-215B03CAC998),
		helpstring("Classic ASP Application replacement object")
	]
	coclass NWCApplication
	{
		interface INWCApplicationObject;
	};
}